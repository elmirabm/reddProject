{"version":3,"sources":["Components/Logo.js","actions/types.js","actions/action.js","Components/Pagination.js","Components/Subreddit.js","Components/Limit.js","App.js","serviceWorker.js","reducers/reducer.js","store.js","index.js"],"names":["Logo","props","react_default","a","createElement","id","className","data-test","src","types","LOAD_CATEGORIES","ADD_DATA","SET_DATA","SET_AVAILABLE_MORE","initialState","isLoaded","items","category","limit","intervalTime","before","after","availableMore","addNew","page","categories","scrollBy","reload","page0Top","loadData","link","dispatch","fetch","then","res","json","type","payload","data","Pagination","_this","this","class","aria-label","onClick","callFirstPage","aria-hidden","callPreviousPage","callNextPage","window","scrollTo","React","Component","connect","state","reducer","distpatch","Subreddit","thumbnail","alt","style","width","height","href","url","length","slice","permalink","title","author","dist_default","unix","tz","format","created_utc","Limit","loadCategories","defaultValue","onChange","e","target","value","map","item","children","App","handleScroll","calculateBeforeAfter","addEventListener","intervalControl","startIntervalMoreAvailble","_this2","callMore","setScroll","Logo_Logo","Components_Limit","Components_Pagination","Subreddit_Subreddit","_this3","interval","setInterval","_this4","loadAvailbleMore","turnOn","undefined","startInterval","clearInterval","doScroll","scrollY","Math","max","document","body","scrollHeight","offsetHeight","documentElement","clientHeight","innerHeight","currentTopRecY","top","floor","down","ceil","name","loadDataAdd","Boolean","location","hostname","match","arguments","action","setAvailble","Object","objectSpread","newAdded","filter","i","c","diff","A","B","splice","needFormA","newSet","toConsumableArray","Set","concat","time","createStore","combineReducers","applyMiddleware","thunk","render","es","store","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.799dbbfc.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './../Styles/App.css';\r\n\r\n\r\nexport const Logo  =(props) =>\r\n{   \r\n    return(\r\n        <div id=\"logo\" className=\"row\" data-test=\"logoTest\">\r\n                <div className=\"col-4\"></div>\r\n                <div className=\"col-4\">\r\n                    <img className=\"img-thumbnail\"  src=\"https://upload.wikimedia.org/wikipedia/en/thumb/5/58/Reddit_logo_new.svg/250px-Reddit_logo_new.svg.png\" /> \r\n                </div> \r\n                </div>\r\n        );        \r\n}\r\n\r\n","export const types ={\r\n    LOAD_CATEGORIES : 'LOAD_CATEGORIES',\r\n    ADD_DATA:'ADD_DATA',\r\n    SET_DATA:'SET_DATA',\r\n    SET_AVAILABLE_MORE:'SET_AVAILABLE_MORE'\r\n\r\n}\r\n\r\n\r\nexport const initialState = {\r\n    isLoaded :false,//first time loading\r\n    items:[],//all posts in current page\r\n    category:\"/r/All/\",//the subredit category on current load\r\n    limit:25, //number of items we load\r\n    intervalTime:60000,//interval reload time\r\n    before:null,//child[0]\r\n    after:null,//last child\r\n    availableMore:false,//if we have more feeds availble that didint fit in current page\r\n    addNew:false,//the Current before/after are expired so we need to load latest data\r\n    page:0,//page we are in =>0 is a page we continue reload unless we are at the buttom of the page/ -1 newer feeds / 1 older feeds\r\n    categories:[],\r\n    scrollBy:0,//how many new record added to the page and we need to scroll\r\n    reload:false,//the before is expired and we need to call page 0 /latest data\r\n    page0Top:\"\"//we keep the newest record loaded , to make sure we know when we have more \r\n    \r\n  };","import {types} from './types.js'\r\n\r\n//call reddit api url to get categories list\r\nexport function loadCategories()\r\n{\r\n    var link = 'https://api.reddit.com/subreddits/popular?limit=100';  \r\n    return dispatch=>{\r\n        fetch(link)\r\n          .then(res =>res.json()).then(json=>{\r\n            dispatch({\r\n                type:types.LOAD_CATEGORIES,//\"LOAD_CATEGORIES\",\r\n                payload:json.data.children         \r\n                \r\n            });\r\n          })\r\n    }\r\n}\r\n\r\n\r\n//call reddit api url , to get last data\r\nexport function loadDataAdd(category,before,limit,top)\r\n{\r\n    \r\n    var link = 'https://api.reddit.com'+category+'new?limit='+(limit+1);//no need count here \r\n    if(before!=null)\r\n    {\r\n        link = link+'&count='+(limit+1)+'&before='+before;//loadNext <<\r\n    }\r\n\r\n    return dispatch=>{\r\n        fetch(link)\r\n          .then(res =>res.json()).then(json=>{\r\n            dispatch({\r\n                type:types.ADD_DATA,//\"ADD_DATA\",\r\n                payload:json.data,            \r\n                top:top,\r\n                page:0\r\n            });\r\n          })\r\n    }\r\n}\r\n\r\n\r\n//call reddit api url to get the most recent  25 record \r\n//call reddit api url to get next . and previouse page's records- if we have before and after\r\nexport function loadData(category,before,after,limit,page)\r\n{\r\n    \r\n    var link = 'https://api.reddit.com'+category+'new?limit='+limit;//no need count here \r\n\r\n    if(before!=null)\r\n    {\r\n        link = link+'&count='+limit+'&before='+before;//loadNext <<\r\n    }\r\n    if(after!=null)\r\n    {\r\n        link = link+'&count='+limit+'&after='+after;//loadPrevious >>\r\n    }\r\n    return dispatch=>{\r\n        fetch(link)\r\n          .then(res =>res.json()).then(json=>{\r\n            dispatch({\r\n                type:types.SET_DATA,//\"SET_DATA\",\r\n                payload:json.data,            \r\n                page:page,\r\n                category:category\r\n            });\r\n          })\r\n    }\r\n}\r\nexport function loadAvailbleMore(category)\r\n{    \r\n    var link = 'https://api.reddit.com'+category+'new?limit='+1;//no need count here \r\n    \r\n    return dispatch=>{\r\n        fetch(link)\r\n          .then(res =>res.json()).then(json=>{\r\n            dispatch({\r\n                type:types.SET_AVAILABLE_MORE,//\"SET_AVAILABLE_MORE\",\r\n                name:json.data.children[0].data.name     \r\n                \r\n            });\r\n          })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport function categoryChange(category)\r\n{\r\n    return{\r\n        type:\"CATEGORY_CHANGE\",\r\n        payload : category\r\n    }\r\n}\r\n\r\n\r\n","\r\nimport React,{Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {loadCategories,loadData} from \"../actions/action\";\r\n\r\nclass Pagination extends React.Component {\r\n\r\n    render(){\r\n    return(\r\n        <div class=\"d-flex justify-content-around\">\r\n            <nav aria-label=\"Page navigation\">\r\n                <ul class=\"pagination\">\r\n                <li class={(this.props.availableMore)?\"page-item\":\"page-item invisible\"}>\r\n                    <a class=\"page-link\"  onClick={()=>this.callFirstPage()} aria-label=\"Previous\">\r\n                        <span aria-hidden=\"true\">&laquo;</span>\r\n                        Most Recent\r\n                    </a>\r\n                </li>\r\n                <li class={(this.props.before!=null)?\"page-item\":\"page-item disabled\"}>\r\n                    <a class=\"page-link\" onClick={()=>this.callPreviousPage()} aria-label=\"Previous\">\r\n                    <span aria-hidden=\"true\">&laquo;</span>\r\n                    Previous\r\n                    </a>\r\n                </li>\r\n                \r\n                <li class=\"page-item\">\r\n                    <a class=\"page-link\" onClick={()=>this.callNextPage()} aria-label=\"Next\">\r\n                    <span aria-hidden=\"true\">&raquo;</span>\r\n                    Next\r\n                    </a>\r\n                </li>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    );\r\n    }\r\n    callPreviousPage(){\r\n        this.props.loadData(this.props.category,this.props.before,null,this.props.limit,-1);\r\n        window.scrollTo(0,0);\r\n     }\r\n   \r\n     callNextPage(){\r\n      this.props.loadData(this.props.category,null,this.props.after,this.props.limit,1);\r\n      window.scrollTo(0,0);\r\n     } \r\n\r\n     callFirstPage(){\r\n        this.props.loadData(this.props.category,null,null,this.props.limit,0);\r\n        window.scrollTo(0,0);\r\n      }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        availableMore :state.reducer.availableMore,\r\n        limit :state.reducer.limit,\r\n        before:state.reducer.before,\r\n        after:state.reducer.after,\r\n        category:state.reducer.category\r\n        \r\n    }\r\n  };\r\n  \r\n    \r\n    const mapDispatchToProps = (distpatch)=>{\r\n      return{\r\n        loadData :(category,before,after,limit,page) =>{\r\n            distpatch(loadData(category,before,after,limit,page));\r\n          }\r\n      }\r\n    };\r\n    \r\n  export default connect(mapStateToProps,mapDispatchToProps)(Pagination);","\r\nimport React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './../Styles/App.css';\r\nimport Moment from 'react-moment';\r\n\r\n\r\nexport const Subreddit  =(props) =>\r\n{   \r\n    \r\n    return(\r\n        \r\n    <div id=\"subreddit\" class=\"container border sub vertical-align: bottom\">  \r\n              \r\n              <div class=\"row\">\r\n                <div class=\"col-2\">\r\n                    <img  src={props.data.thumbnail} alt=\"new\"  style={{width: '100px', height: '100px'}}/> \r\n\r\n                </div>\r\n                <div className=\"col-10\">\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12\">\r\n                                <a href={props.data.url} class=\"badge badge-light\">{(props.data.url.length>30)?(props.data.url.slice(0, 29)+\"...\"):props.data.url}</a>\r\n                            </div>\r\n                        </div>\r\n                   \r\n                        <div class=\"row titlerow\">\r\n                            <div class=\"col-12 align-self-center\">\r\n                                <h6>\r\n                                <a href={\"https://www.reddit.com/\"+props.data.permalink} class=\" badge-light\">\r\n                                {(props.data.title.length>200)?(props.data.title.slice(0, 199)+\"...\"):props.data.title}\r\n                                </a>\r\n                                </h6>\r\n                            </div>\r\n                        </div>\r\n                \r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 \">\r\n                                <a href={\"https://www.reddit.com//user/\"+props.data.author} class=\"badge-light\"> \r\n                                <img  src={\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTGHrHb3o7rXscb1kSKDGeSKYjLf3DUnCr8C_ycH_xCE4ijdAdz8w\"} alt=\"new\"  style={{width: '15px', height: '15 px'}}/> \r\n                            \r\n                                {props.data.author}</a>\r\n                            </div>\r\n                            <div class=\"col-2 \">\r\n                            \r\n                                <a href={\"https://www.reddit.com//r/\"+props.category+\"/comments/\"+props.data.id} class=\"badge badge-light\">\r\n                                <img  src={\"https://png.pngtree.com/svg/20170608/ba314d7b9e.svg\"} alt=\"new\"  style={{width: '15px', height: '15 px'}}/> \r\n                                Comments</a> \r\n                            </div>            \r\n                            <div class=\"col-4 \">\r\n                            <img  src={\"https://cdn2.iconfinder.com/data/icons/pittogrammi/142/10-512.png\"} alt=\"new\"  style={{width: '15px', height: '15 px'}}/> \r\n                                <Moment unix tz=\"Canada/Eastern\" format=\"MMMM Do YYYY, h:mm:ss a\" class=\"badge badge-light\">{props.data.created_utc}</Moment>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        \r\n    </div>\r\n    );        \r\n}","\r\nimport React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './../Styles/App.css';\r\nimport {connect} from \"react-redux\";\r\nimport {loadCategories,loadData} from \"../actions/action\";//limitChange,categoryChange\r\n\r\n\r\n class Limit extends React.Component {\r\n\r\n  componentDidMount(){\r\n    this.props.loadCategories();\r\n  }\r\n\r\n    render(){\r\n        return(\r\n            <div class=\"selector\">\r\n              \r\n                <div class=\"row\">\r\n                  <div className=\"col-md-2 col-sm-2\">\r\n                    Category:\r\n                  </div>\r\n                  <div className=\"col-md-10 col-sm-10\">\r\n                    <select class=\"form-control\" defaultValue = {this.props.category}  onChange= {(e) => this.props.loadData(e.target.value,null,null,this.props.limit,0)}>\r\n                    <option value=\"/r/All/\" >All</option>\r\n                    {this.props.categories.map(item=>(\r\n                      <option value={item.data.url} >{item.data.title}</option>\r\n                    ))}\r\n                   \r\n\r\n                        \r\n                    </select>\r\n                  </div>\r\n                </div>                \r\n            </div>\r\n        );\r\n}\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state)=>{\r\n  return{\r\n   categories:state.reducer.categories,\r\n   category: state.reducer.category,\r\n   limit:state.reducer.limit\r\n  }\r\n};\r\n\r\n  \r\n  const mapDispatchToProps = (distpatch)=>{\r\n    return{\r\n\r\n      loadData :(category,before,after,limit,page) =>{\r\n        distpatch(loadData(category,before,after,limit,page));\r\n      },\r\n      loadCategories:()=>\r\n      {\r\n        distpatch(loadCategories());\r\n      }\r\n    }\r\n  };\r\n  \r\nexport default connect(mapStateToProps,mapDispatchToProps)(Limit);\r\n\r\n\r\n /*  \r\n <option value=\"All\" selected>All</option>\r\n                        <option value=\"News\">News</option>\r\n                        <option value=\"Funny\">Funny</option>\r\n                        <option value=\"Science\">Science</option>\r\n                        <option value=\"AskReddit\">AskReddit</option>\r\n \r\n <div class=\"row\">\r\n                 <div className=\"col-md-2 col-sm-2\">\r\n                    Number in page:\r\n                  </div>\r\n                  <div className=\"col-md-10 col-sm-10\">\r\n                    <select class=\"form-control\" defaultValue = {this.props.limit}  onChange= {(e) => this.props.loadData(this.props.category,null,null,e.target.value,0,false)}>\r\n                        <option value=\"3\" >3</option>\r\n                        <option value=\"25\" selected >25</option>\r\n                        <option value=\"50\">50</option>\r\n                        <option value=\"100\">100</option>\r\n                        <option value=\"200\">200</option>\r\n                    </select>\r\n                  </div>\r\n                </div> */\r\n\r\n      //limitChange :(limit) =>{\r\n       // distpatch(limitChange(limit));\r\n      //},\r\n      //categoryChange :(category) =>{\r\n      //  distpatch(categoryChange(category));\r\n      //},","import React from 'react';\r\n\r\nimport 'moment-timezone';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Styles/App.css';\r\nimport {Logo} from './Components/Logo.js';\r\nimport Pagination from \"./Components/Pagination.js\";\r\nimport {Subreddit} from \"./Components/Subreddit.js\";\r\nimport {connect} from \"react-redux\";\r\nimport {loadData,loadDataAdd,loadAvailbleMore} from \"./actions/action\";\r\nimport Limit from \"./Components/Limit.js\";\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  interval;\r\n  top;\r\n  before;\r\n\r\n  componentDidMount(){\r\n    window.addEventListener('scroll', this.handleScroll,true);\r\n    this.callFirstPage();\r\n    this.intervalControl(true);\r\n    this.startIntervalMoreAvailble();\r\n  }\r\n\r\n  render(){\r\n    if(!this.props.isLoaded){\r\n      return <div><Logo/> loading ....</div>\r\n    }\r\n    else{\r\n      if(this.props.reload){\r\n        this.callFirstPage()\r\n      }\r\n      if(this.props.addNew){\r\n        this.callMore(null);\r\n      }\r\n      this.setScroll();\r\n      this.calculateBeforeAfter();\r\n      this.intervalControl(this.props.page==0);\r\n        \r\n      return (\r\n        <div className=\"container\">\r\n          <Logo/>          \r\n          <Limit/>\r\n          <Pagination />           \r\n          {this.props.items.map(item =>(\r\n            <Subreddit data={item.data} category={this.props.category}/> \r\n            ))}           \r\n           <Pagination />          \r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  startInterval(){\r\n    this.interval=setInterval(()=>{\r\n      //console.log(\"callload   start\");\r\n      this.callMore(this.before);\r\n      //console.log(\"callload   done\");\r\n    },this.props.intervalTime);\r\n  }\r\n\r\n  startIntervalMoreAvailble(){\r\n    var interval=setInterval(()=>{\r\n      this.props.loadAvailbleMore(this.props.category);\r\n    },5000);\r\n  }\r\n\r\n  intervalControl(turnOn){// we just turn it on for page 0\r\n    if(turnOn)\r\n    {\r\n     if((this.interval==null) ||(this.interval==undefined)){\r\n       this.startInterval();\r\n     }\r\n    }\r\n    else{\r\n     clearInterval(this.interval);\r\n     this.interval=null;\r\n    }    \r\n  }\r\n  setScroll(){\r\n    if((!this.props.doScroll) || (this.props.scrollBy==0) ){return;}\r\n      window.scrollTo(0, (\r\n        (window.scrollY)\r\n        +((this.props.scrollBy)*140)));\r\n  }\r\n\r\n  calculateBeforeAfter()\r\n  {\r\n      var limit = Math.max( document.body.scrollHeight, document.body.offsetHeight, \r\n      document.documentElement.clientHeight, document.documentElement.scrollHeight, document.documentElement.offsetHeight );\r\n     \r\n      var realMax = limit -window.innerHeight;\r\n      var currentTopRecY = (window.scrollY-140)/140;\r\n      this.top=Math.floor(currentTopRecY);\r\n      var down = Math.ceil(currentTopRecY+6);\r\n      if(this.top<0){ \r\n        this.top=0;\r\n      }\r\n\r\n      if(down>23){\r\n        down =24\r\n        this. intervalControl(false);\r\n      }\r\n      else{\r\n        this. intervalControl(this.props.page==0);\r\n      }\r\n      if(this.props.items.length<25){\r\n        return;\r\n      } \r\n      this.before=this.props.items[this.top+1].data.name;\r\n  }\r\n\r\n  handleScroll = () => {\r\n    this.calculateBeforeAfter();\r\n };\r\n  callFirstPage(){\r\n    this.props.loadData(this.props.category,null,null,this.props.limit,0);\r\n    window.scrollTo(0,0);\r\n  }\r\n\r\n  callMore(before){\r\n    this.props.loadDataAdd(this.props.category,before,this.props.limit,this.top);\r\n  }\r\n \r\n \r\n}\r\nconst mapStateToProps = (state)=>{\r\n  return{\r\n    isLoaded:state.reducer.isLoaded,\r\n    items:state.reducer.items,\r\n    category:state.reducer.category,\r\n    intervalTime :state.reducer.intervalTime,\r\n    limit :state.reducer.limit,\r\n    before:state.reducer.before,\r\n    after:state.reducer.after,   \r\n    addNew : state.reducer.addNew,\r\n    doScroll:state.reducer.doScroll,\r\n    page:state.reducer.page,\r\n    scrollBy:state.reducer.scrollBy,\r\n    reload:state.reducer.reload\r\n\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (distpatch)=>{\r\n  return{\r\n    loadData :(category,before,after,limit,page) =>{\r\n      distpatch(loadData(category,before,after,limit,page));\r\n    },\r\n    loadDataAdd:(category,before,limit,top)=>{\r\n      distpatch(loadDataAdd(category,before,limit,top));\r\n    },\r\n    loadAvailbleMore:(category)=>{\r\n      distpatch(loadAvailbleMore(category));\r\n    }\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\r\n\r\n\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {types,initialState} from '../actions/types';\r\n\r\n  const reducer = (state= initialState, action)=>{\r\n    switch(action.type)\r\n    {\r\n        case types.SET_AVAILABLE_MORE:// \"SET_AVAILABLE_MORE\":\r\n        var setAvailble = false;\r\n            if(state.page0Top!=\"\" && \r\n                (action.name!=state.page0Top)\r\n            ){\r\n                setAvailble=true;\r\n            }\r\n            state={\r\n                ...state,\r\n                availableMore:setAvailble\r\n            }\r\n        break;\r\n        \r\n        case types.LOAD_CATEGORIES://\"LOAD_CATEGORIES\":\r\n            state={\r\n                ...state,\r\n                categories:action.payload,\r\n                availableMore:false\r\n            }\r\n        break;\r\n      \r\n        case types.ADD_DATA://\"ADD_DATA\":\r\n        var newAdded= action.payload.children.filter(i=>state.items.filter(c=>c.data.id===i.data.id).length===0);\r\n        var diff = newAdded.length;// new added\r\n        var scrollBy=0;\r\n        //if 0 loaded : the before is expired - we need to laod again with null before\r\n        if(action.payload.children.length>0){//this is new \r\n            if(newAdded.length>17){//19\r\n                var A=newAdded.slice((newAdded.length-(25-7-action.top)),newAdded.length);\r\n                var B=state.items.splice(0,25-A.length);\r\n                scrollBy=A.length;\r\n            }\r\n            else {\r\n                var needFormA= ((25-(action.top+7)>newAdded.length)?newAdded.length:(25-(action.top+7)));\r\n                var A=newAdded.slice((newAdded.length-needFormA),newAdded.length);\r\n                var B=state.items.splice(0,25-needFormA);\r\n                scrollBy=A.length;\r\n            }\r\n            var newSet = [...new Set([...A, ...B])];\r\n        \r\n            state={\r\n                ...state,\r\n                items:newSet,\r\n                after:action.payload.after,\r\n                before:newSet[0].data.name,//action.payload.before,\r\n                isLoaded: true,              \r\n                addNew:false,\r\n                doScroll:true,\r\n                availableMore:(diff>A.length),\r\n                page:action.page,\r\n                scrollBy:scrollBy,\r\n                reload:false,\r\n                page0Top:newSet[0].data.name\r\n            }\r\n        }\r\n        else\r\n        {\r\n            state={\r\n                ...state,\r\n                addNew:true,\r\n                scrollBy:0,\r\n                reload:false\r\n            }\r\n        }\r\n        break;\r\n        case types.SET_DATA://\"SET_DATA\":\r\n       //previous , next call\r\n        if(action.payload.children.length<25)\r\n        {\r\n            state={\r\n                ...state,\r\n                addNew:false,\r\n                page:0,//we are still in page 0 , as we dont have enought data to load\r\n                reload:(action.payload.children.length==0)//this before is expired and we need to relaod\r\n                \r\n            }\r\n        }\r\n        else\r\n        {\r\n            state={\r\n                ...state,\r\n                items:action.payload.children,\r\n                after:action.payload.after,\r\n                before:action.payload.children[0].data.name,//action.payload.before,\r\n                page0Top:action.payload.children[0].data.name,\r\n                isLoaded: true,\r\n                time: state.time+1,\r\n                category:action.category,\r\n                addNew:false,\r\n                doScroll:false,\r\n                page:action.page,\r\n                reload:false\r\n            }\r\n        }\r\n        break;\r\n        default:\r\n            \r\n        break;\r\n    }\r\n   \r\n    return state;//ne state that app will use from now \r\n    };\r\n\r\n export default reducer ;\r\n\r\n","import logger from \"redux-logger\"\r\nimport{createStore, combineReducers, applyMiddleware} from \"redux\";\r\nimport reducer from \"./reducers/reducer\"\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport default  createStore(\r\n    combineReducers({reducer}),//can assing multiple reducer if needed\r\n    {},\r\n    applyMiddleware(thunk)//thunk to handle async fetch calls //logger,\r\n  );\r\n\r\n  /*const myLogger=(store)=>(next) =>(action) =>{\r\n    console.log(\"Logged Action : \",action);\r\n    next(action);\r\n  };\r\n  */","import React from 'react';\r\nimport {render} from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from \"./store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\n\r\nrender(\r\n    <Provider store={store}><App /></Provider>, \r\n    document.getElementById('root')\r\n);\r\nserviceWorker.unregister();\r\n\r\n\r\n\r\n"],"sourceRoot":""}